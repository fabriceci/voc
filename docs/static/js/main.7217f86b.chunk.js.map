{"version":3,"sources":["App.js","index.js"],"names":["modules","words","getRatio","attempt","success","Math","round","loadGoogleSheet","a","force","result","JSON","parse","localStorage","getItem","doc","GoogleSpreadsheet","useApiKey","loadInfo","sheet","sheetsByIndex","getRows","rows","data","map","r","fr","trim","undefined","es","type","module","modulesList","forEach","value","index","findIndex","e","push","includes","setItem","stringify","getStatus","status","Map","updateStatus","key","point","has","keyValue","get","attemps","error","set","App","useState","vocabulary","setVocabulary","current","setCurrent","input","setInput","setError","show","setShow","setModule","setType","tilde","setTilde","refreshData","removeItem","sort","random","readWord","message","synth","window","speechSynthesis","join","msg","SpeechSynthesisUtterance","pitch","rate","lang","voice","getVoices","find","speak","console","checkWord","useCallback","toLowerCase","target","t","length","useEffect","loadSheet","handleEnter","document","addEventListener","removeEventListener","inputClass","filterModule","filter","addFilter","className","currentWords","currentInput","normalize","replace","resultForWord","onClick","onChange","style","position","width","flexGrow","padding","outline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7217f86b.chunk.js","sourcesContent":["import {useEffect, useState, useCallback} from 'react';\nimport {GoogleSpreadsheet} from 'google-spreadsheet';\n\nlet modules = []\nlet words = []\n\nconst getRatio = (attempt, success) => {\n    if (success === 0) return 0;\n    return Math.round((success / attempt) * 100 * 100) / 100\n}\n\nasync function loadGoogleSheet(force = false) {\n\n    let result = JSON.parse(localStorage.getItem(\"words\"));\n    if (!result || force) {\n\n        const doc = new GoogleSpreadsheet('1lA849BH1mhhAlnmhamfNnkXQVGJmEz_XpD5Fqbco5m0')\n        doc.useApiKey('AIzaSyB3fhuMVnaW77F8ZiDu_mo_xJKdKzQo6tU')\n        await doc.loadInfo();\n        const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id]\n        const rows = await sheet.getRows();\n        const data = rows.map(r => {\n            const data = {\n                fr: r['fr'] ? r['fr'].trim() : undefined,\n                es: r['es'] ? [r['es'].trim()] : [],\n                type: r['type'] ? r['type'].trim() : undefined,\n                module: r['module'] ? r['module'].trim() : undefined,\n            }\n            return data;\n        })\n\n        result = []\n        var modulesList = []\n        data.forEach(value => {\n            // Restructuration\n            if(value.fr){\n                var index = result.findIndex(e => e.fr === value.fr);\n                if (index === -1) {\n                    result.push(value);\n                } else {\n                    result[index].es.push(...value.es);\n                }\n\n                // liste des modules\n\n                if (value.module && !modulesList.includes(value.module)) {\n                    modulesList.push(value.module);\n                }\n            }\n        })\n        // ajout dans la variable globale et dans le storage\n        localStorage.setItem(\"words\", JSON.stringify(result));\n        localStorage.setItem(\"modules\", JSON.stringify(modulesList));\n\n    }\n\n    words = [...result];\n    modules = [...JSON.parse(localStorage.getItem(\"modules\"))]\n}\n\nconst getStatus = () => {\n    const status = JSON.parse(localStorage.getItem(\"status\"));\n    if (!status) {\n        return new Map();\n    } else {\n        return new Map(status);\n    }\n}\n\nconst updateStatus = (key, point) => {\n    let status = getStatus();\n    if (status.has(key)) {\n        var keyValue = status.get(key);\n        keyValue.attemps += 1;\n        if (point === 1) {\n            keyValue.success += 1;\n        } else {\n            keyValue.error += 1;\n        }\n        status.set(key, keyValue);\n    } else {\n        status.set(key, {attemps: 1, success: point === 1 ? 1 : 0, error: point === -1 ? 1 : 0})\n    }\n    localStorage.setItem(\"status\", JSON.stringify([...status]));\n}\n\nfunction App() {\n    const [vocabulary, setVocabulary] = useState([]);\n    const [current, setCurrent] = useState(0)\n    const [input, setInput] = useState('')\n    const [error, setError] = useState(false)\n    const [show, setShow] = useState(false)\n    const [module, setModule] = useState('all')\n    const [type, setType] = useState('all')\n    const [tilde, setTilde] = useState(false)\n\n    const refreshData = async () => {\n        setVocabulary([]);\n        localStorage.removeItem(\"words\")\n        localStorage.removeItem(\"modules\")\n        await loadGoogleSheet(true);\n        setVocabulary([...words].sort(() => Math.random() - 0.5));\n    }\n\n    const readWord = (message) => {\n        setError(true)\n        var synth = window.speechSynthesis;\n        if (!synth) {\n            console.error(\"No speech syntesis API\");\n            return;\n        }\n\n        if (typeof message !== 'string') {\n            message = vocabulary[current].es.join(\", o ,\");\n        }\n\n        var msg = new SpeechSynthesisUtterance(message);\n        msg.pitch = 1.1;\n        msg.rate = 1;\n        msg.lang = 'es-ES'\n        var voices = speechSynthesis.getVoices();\n        var voice = voices.find(e => e.lang === 'es-ES')\n        msg.voice = voice;\n\n        synth.speak(msg);\n    }\n\n    const checkWord = useCallback(() => {\n        const value = input.toLowerCase().trim();\n        const target = vocabulary[current].es;\n        if (value.trim() === '') return;\n        if (target.map(t => t.toLowerCase()).includes(value)) {\n            setCurrent(e => (e + 1) === vocabulary.length ? 0 : e + 1)\n            setInput('')\n            setError(false);\n            setShow(false);\n            setTilde(false);\n            updateStatus(vocabulary[current].fr, error || show ? -1 : 1)\n        } else {\n            setError(true);\n        }\n    }, [current, vocabulary, input]);\n\n\n    useEffect(() => {\n        const loadSheet = async () => {\n            await loadGoogleSheet();\n            setVocabulary([...words].sort(() => Math.random() - 0.5));\n        }\n\n        loadSheet();\n\n    }, [])\n\n    useEffect(() => {\n        const handleEnter = function (e) {\n            if (e.key === '@') {\n                setShow(e => true)\n            }\n            if (e.key === 'Control') {\n                readWord()\n            }\n            if (e.key === 'Enter') {\n                checkWord();\n            }\n        }\n\n        document.addEventListener('keydown', handleEnter);\n        return () => {\n            document.removeEventListener('keydown', handleEnter);\n        };\n    }, [checkWord])\n\n    useEffect(() => {\n        if (tilde === true) {\n            readWord(\"¿Dónde está la tilde?\")\n        }\n    }, [tilde])\n\n    const nextWord = () => {\n        setCurrent(e => (e + 1) === vocabulary.length ? 0 : e + 1)\n        setInput('')\n        setShow(false);\n        setError(false);\n        setTilde(false);\n        updateStatus(vocabulary[current].fr, -1)\n    }\n\n\n    const filterModule = (module, filter) => {\n        var result = []\n        if (module === 'all') {\n            result = [...words];\n        } else {\n            result = words.filter(e => e.module === module);\n        }\n        const status = getStatus()\n        if (filter === 'error') {\n            result = result.filter(e => !status.has(e.fr) || getRatio(status.get(e.fr).attemps, status.get(e.fr).success) < 80);\n        } else if (filter === 'error-only') {\n            result = result.filter(e => status.has(e.fr) && getRatio(status.get(e.fr).attemps, status.get(e.fr).success) < 80);\n        }\n\n        setVocabulary(result);\n    }\n\n    const addFilter = (type, value) => {\n        if (type === 'module') {\n            filterModule(value, type);\n            setModule(value)\n        } else {\n            filterModule(module, value)\n            setType(value)\n        }\n    }\n\n    if (vocabulary.length === 0) {\n        return <div className=\"loader\">\n            <div>chargement...</div>\n            <div className=\"lds-ripple\">\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    }\n\n    var inputClass;\n    var currentWords = vocabulary[current].es.map(t => t.toLowerCase());\n    var currentInput = input.toLowerCase().trim()\n    if (error) inputClass = 'error';\n    if (error && currentWords.includes(currentInput)) {\n        inputClass = 'success'\n    } else if (error && currentWords.map(e => e.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")).includes(currentInput)) {\n        inputClass = 'warning'\n        if (!tilde) {\n            setTilde(true)\n        }\n\n    }\n    const resultForWord = getStatus().get(vocabulary[current].fr);\n    return (\n        <div className=\"App\">\n            <div className=\"status\">\n                <div>{current + 1}/{vocabulary.length + 1}</div>\n                <div>\n                    <div className=\"btn btn-info btn-refresh\" onClick={refreshData}>mettre à jour les données</div>\n                </div>\n                <div>\n                    <div>\n                        <select value={module} onChange={(e) => addFilter('module', e.target.value)}>\n                            <option key=\"all\" value=\"all\">Tous les modules</option>\n                            {\n                                modules.map(e => <option key={e}>{e}</option>)\n                            }\n                        </select>\n                    </div>\n                    <div>\n                        <select value={type} onChange={(e) => addFilter('type', e.target.value)}>\n                            <option key=\"all\" value=\"all\">pas de filtre</option>\n                            <option key=\"error\" value=\"error\">nouveaux et erreurs</option>\n                            <option key=\"error-only\" value=\"error-only\">juste les erreurs</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n            <div style={{position: 'relative'}}>\n                <div className=\"help-message\">Aide à la saisie, cliquez sur une lettre pour l'ajouter</div>\n                <div className=\"helper\">\n                    <li><kbd onClick={() => setInput(input => input += 'ñ')}>ñ</kbd></li>\n                    <li><kbd onClick={() => setInput(input => input += 'á')}>á</kbd></li>\n                    <li><kbd onClick={() => setInput(input => input += 'ó')}>ó</kbd></li>\n                    <li><kbd onClick={() => setInput(input => input += 'í')}>í</kbd></li>\n                    <li><kbd onClick={() => setInput(input => input += '¡')}>¡</kbd></li>\n                    <li><kbd onClick={() => setInput(input => input += '¿')}>¿</kbd></li>\n                </div>\n            </div>\n\n            <div className=\"statistics\">\n                <div>{ vocabulary[current].es.length > 1 && vocabulary[current].es.length + \" possibilités\" }</div>\n                <div>\n                {resultForWord ? getRatio(resultForWord.attemps, resultForWord.success) + ' % de réussite' : 'nouveau'} | {vocabulary[current].module}\n                </div>\n            </div>\n            <div className=\"currentWord alert alert-info\">{vocabulary[current].fr}</div>\n\n\n            <div className=\"input-group mb-3\" style={{width: '100%'}}>\n                <input style={{flexGrow: 1, padding: '0 15px', outline: 'none'}} className={inputClass} type=\"text\" value={input}\n                       onChange={(e) => setInput(e.target.value)}/>\n                <div className=\"input-group-append\">\n                    <button onClick={checkWord} className=\"btn btn-primary\">Valider</button>\n                </div>\n            </div>\n            {show &&\n            <p className=\"answer\">{vocabulary[current].es.join(', ')}</p>\n            }\n\n            <div className=\"solutions\">\n                {!show &&\n                <button key=\"show\" className=\"btn btn-danger\" onClick={() => setShow(true)}>🕶 Voir la réponse</button>\n                }\n                {show &&\n                <button key=\"next\" className=\"btn btn-danger\" onClick={nextWord}>Next</button>\n                }\n                <button key=\"read\" className=\"btn btn-warning\" onClick={readWord}>Écouter la\n                    réponse 🔊\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}