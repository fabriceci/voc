{"version":3,"sources":["App.js","index.js"],"names":["modules","words","getRatio","attempt","success","Math","round","cleanString","s","replaceAll","replace","trim","toLowerCase","cleanAndNormalize","normalize","loadGoogleSheet","a","force","result","JSON","parse","localStorage","getItem","lastSync","yesterday","Date","setDate","getDate","parseInt","getTime","doc","GoogleSpreadsheet","useApiKey","loadInfo","sheet","sheetsByIndex","getRows","rows","data","map","r","fr","undefined","es","type","module","subject","minimum","modulesList","forEach","value","index","findIndex","e","push","includes","setItem","stringify","getStatus","status","Map","updateStatus","key","point","has","keyValue","get","attemps","error","set","App","useState","vocabulary","setVocabulary","current","setCurrent","repeat","setRepeat","minimal","setMinimal","repeatCount","setRepeatCount","input","setInput","setError","show","setShow","setModule","setType","tilde","setTilde","loading","setLoading","textInput","useRef","refreshData","removeItem","focus","reloadWords","readWord","message","synth","window","speechSynthesis","join","msg","SpeechSynthesisUtterance","pitch","rate","lang","voice","getVoices","find","speak","console","checkWord","useCallback","target","c","length","useEffect","loadSheet","handleEnter","document","addEventListener","removeEventListener","filter","copy","sort","random","addLetter","letter","className","inputClass","currentWords","currentInput","resultForWord","onClick","onChange","checked","id","htmlFor","style","position","width","ref","onKeyPress","preventDefault","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.438a91a1.chunk.js","sourcesContent":["import {useEffect, useState, useCallback, useRef} from 'react';\nimport {GoogleSpreadsheet} from 'google-spreadsheet';\n\nlet modules = []\nlet words = []\n\nconst getRatio = (attempt, success) => {\n    if (success === 0) return 0;\n    return Math.round((success / attempt) * 100 * 100) / 100\n}\n\nconst cleanString = (s) => {\n    if (!s) return ''\n    return s.replaceAll('¡', '')\n        .replaceAll('!', '')\n        .replaceAll('¿', '')\n        .replaceAll('?', '')\n        .replaceAll('.', '')\n        .replaceAll('…', '')\n        .replace(/\\s\\s+/g, ' ')\n        .trim()\n        .toLowerCase();\n}\n\nconst cleanAndNormalize = (s) => cleanString(s).normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n\nasync function loadGoogleSheet(force = false) {\n\n    let result = JSON.parse(localStorage.getItem(\"words\"));\n    if (result) {\n        let lastSync = localStorage.getItem(\"lastsync\");\n        var yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        if (!lastSync || parseInt(lastSync) < yesterday.getTime()) {\n            result = null;\n        }\n    }\n    if (!result || force) {\n\n        const doc = new GoogleSpreadsheet('1lA849BH1mhhAlnmhamfNnkXQVGJmEz_XpD5Fqbco5m0')\n        doc.useApiKey('AIzaSyB3fhuMVnaW77F8ZiDu_mo_xJKdKzQo6tU')\n        await doc.loadInfo();\n        const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id]\n        const rows = await sheet.getRows();\n        const data = rows.map(r => {\n            const data = {\n                fr: r['fr'] ? r['fr'].trim() : undefined,\n                es: r['es'] ? [r['es'].trim()] : [],\n                type: r['type'] ? r['type'].trim() : undefined,\n                module: r['module'] ? r['module'].trim() : undefined,\n                subject: r['sujet'] ? r['sujet'].trim() : undefined,\n                minimum: r['minimum'],\n            }\n            return data;\n        })\n\n        result = []\n        var modulesList = []\n        data.forEach(value => {\n            // Restructuration\n            if (value.fr) {\n                var index = result.findIndex(e => e.fr === value.fr);\n                if (index === -1) {\n                    result.push(value);\n                } else {\n                    if (!result[index].es.includes(...value.es)) {\n                        result[index].es.push(...value.es);\n                    }\n                }\n\n                // liste des modules\n\n                if (value.module && !modulesList.includes(value.module)) {\n                    modulesList.push(value.module);\n                }\n            }\n        })\n        // ajout dans la variable globale et dans le storage\n        localStorage.setItem(\"words\", JSON.stringify(result));\n        localStorage.setItem(\"modules\", JSON.stringify(modulesList));\n        localStorage.setItem(\"lastsync\", JSON.stringify(new Date().getTime()));\n    }\n\n    words = [...result];\n    modules = [...JSON.parse(localStorage.getItem(\"modules\"))]\n}\n\nconst getStatus = () => {\n    const status = JSON.parse(localStorage.getItem(\"status\"));\n    if (!status) {\n        return new Map();\n    } else {\n        return new Map(status);\n    }\n}\n\nconst updateStatus = (key, point) => {\n    let status = getStatus();\n    if (status.has(key)) {\n        var keyValue = status.get(key);\n        keyValue.attemps += 1;\n        if (point === 1) {\n            keyValue.success += 1;\n        } else {\n            keyValue.error += 1;\n        }\n        status.set(key, keyValue);\n    } else {\n        status.set(key, {attemps: 1, success: point === 1 ? 1 : 0, error: point === -1 ? 1 : 0})\n    }\n    localStorage.setItem(\"status\", JSON.stringify([...status]));\n}\n\nfunction App() {\n    const [vocabulary, setVocabulary] = useState([]);\n    const [current, setCurrent] = useState(0)\n    const [repeat, setRepeat] = useState(true)\n    const [minimal, setMinimal] = useState(true)\n    const [repeatCount, setRepeatCount] = useState(0)\n    const [input, setInput] = useState('')\n    const [error, setError] = useState(false)\n    const [show, setShow] = useState(false)\n    const [module, setModule] = useState('all')\n    const [type, setType] = useState('error')\n    const [tilde, setTilde] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const textInput = useRef(null);\n\n    const refreshData = async () => {\n        setVocabulary([]);\n        localStorage.removeItem(\"words\")\n        localStorage.removeItem(\"modules\")\n        await loadGoogleSheet(true);\n        // setVocabulary([...words].sort(() => Math.random() - 0.5));\n        if (textInput && textInput.current) textInput.current.focus()\n        setModule('all');\n        setType('error');\n        reloadWords();\n        setLoading(false)\n    }\n\n    const readWord = (message) => {\n        if (textInput && textInput.current) textInput.current.focus();\n        setError(true)\n        var synth = window.speechSynthesis;\n        if (!synth) {\n            console.error(\"No speech syntesis API\");\n            return;\n        }\n\n        if (typeof message !== 'string') {\n            message = vocabulary[current].es.join(\", o ,\");\n        }\n\n        var msg = new SpeechSynthesisUtterance(message);\n        msg.pitch = 1.1;\n        msg.rate = 1;\n        msg.lang = 'es-ES'\n        var voices = speechSynthesis.getVoices();\n        var voice = voices.find(e => e.lang === 'es-ES')\n        msg.voice = voice;\n\n        synth.speak(msg);\n    }\n\n    const checkWord = useCallback(() => {\n        const value = input.toLowerCase().trim();\n        const target = vocabulary[current].es;\n        if (value.trim() === '') return;\n        if (target.map(cleanString).includes(cleanString(value))) {\n            if (repeat && (error || show) && repeatCount < 4) {\n                setInput('')\n                setRepeatCount(c => c + 1)\n            } else {\n                if (current + 1 === vocabulary.length) {\n                    setCurrent(0)\n                    reloadWords();\n                } else {\n                    setCurrent(e => e + 1);\n                }\n                setInput('')\n                setRepeatCount(0)\n                setError(false);\n                setShow(false);\n                setTilde(false);\n                updateStatus(vocabulary[current].fr, error || show ? -1 : 1)\n            }\n            if (textInput && textInput.current) textInput.current.focus();\n        } else {\n            setError(true);\n        }\n    }, [current, vocabulary, input]);\n\n    useEffect(() => {\n        const loadSheet = async () => {\n            await loadGoogleSheet();\n            // setVocabulary([...words].sort(() => Math.random() - 0.5));\n        }\n\n        loadSheet();\n        reloadWords();\n        setLoading(false)\n    }, [])\n\n    useEffect(() => {\n        const handleEnter = function (e) {\n            if (e.key === '@') {\n                setShow(e => true)\n            }\n            if (e.key === 'Control') {\n                readWord()\n            }\n            if (e.key === 'Enter') {\n                checkWord();\n            }\n        }\n\n        document.addEventListener('keydown', handleEnter);\n        return () => {\n            document.removeEventListener('keydown', handleEnter);\n        };\n    }, [checkWord])\n\n    useEffect(() => {\n        if (tilde === true) {\n            readWord(\"¿Dónde está la tilde?\")\n        }\n    }, [tilde])\n\n    const reloadWords = () => {\n        let result = [...words]\n        if (minimal) {\n            result = result.filter(e => e.minimum)\n        }\n        if (module !== 'all') {\n            result = result.filter(e => e.module === module);\n        }\n\n        const status = getStatus()\n        var copy = [...result]\n        if (type === 'error') {\n            result = result.filter(e => !status.has(e.fr) || getRatio(status.get(e.fr).attemps, status.get(e.fr).success) < 80);\n        } else if (type === 'error-only') {\n            result = result.filter(e => status.has(e.fr) && getRatio(status.get(e.fr).attemps, status.get(e.fr).success) < 80);\n        }\n\n        // To do: changer ça\n        if (result.length === 0) {\n            setType('all');\n            result = copy;\n        }\n        setCurrent(0)\n        setInput('');\n        setShow(false);\n        setRepeatCount(0);\n        setError(false);\n        setTilde(false);\n        setVocabulary(result.sort(() => Math.random() - 0.5));\n        if (textInput && textInput.current) textInput.current.focus()\n    }\n    useEffect(() => {\n        reloadWords()\n    }, [module, type, minimal])\n\n    const nextWord = () => {\n        if (current + 1 === vocabulary.length) {\n            setCurrent(0)\n        } else {\n            setCurrent(e => e + 1);\n        }\n        setInput('');\n        setShow(false);\n        setRepeatCount(0);\n        setError(false);\n        setTilde(false);\n        updateStatus(vocabulary[current].fr, -1)\n        if (textInput && textInput.current) textInput.current.focus()\n    }\n\n    const addLetter = (letter) => {\n        setInput(input => input += letter)\n        if (textInput && textInput.current) textInput.current.focus()\n    }\n\n    if (loading) {\n        return <div className=\"loader\">\n            <div>chargement...</div>\n            <div className=\"lds-ripple\">\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    }\n\n    var inputClass = 'mainInput';\n    var currentWords = vocabulary[current] ? vocabulary[current].es.map(cleanString) : {};\n    var currentInput = cleanString(input);\n    if (error) inputClass += ' error';\n    if (error && currentWords.includes(currentInput)) {\n        inputClass += ' success'\n    } else if (error && currentWords.map(cleanAndNormalize).includes(cleanAndNormalize(currentInput))) {\n        inputClass += ' warning'\n        if (!tilde) {\n            setTilde(true)\n        }\n\n    }\n\n    const handleTextarea = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            checkWord();\n        }\n    }\n    const resultForWord = vocabulary[current] ? getStatus().get(vocabulary[current].fr) : {};\n    return (\n        <div className=\"App\">\n            <div className=\"status\">\n                <div>{current + 1}/{vocabulary.length}</div>\n                <div>\n                    <div className=\"btn btn-info btn-refresh\" onClick={refreshData}>mettre à jour les données</div>\n                </div>\n                <div>\n                    <div>\n                        <select value={module} onChange={(e) => setModule(e.target.value)}>\n                            <option key=\"all\" value=\"all\">Tous les modules</option>\n                            {\n                                modules.map(e => <option key={e}>{e}</option>)\n                            }\n                        </select>\n                    </div>\n                    <div>\n                        <select value={type} onChange={(e) => setType(e.target.value)}>\n                            <option key=\"all\" value=\"all\">pas de filtre</option>\n                            <option key=\"error\" value=\"error\">nouveaux et erreurs</option>\n                            <option key=\"error-only\" value=\"error-only\">juste les erreurs</option>\n                        </select>\n                    </div>\n                    <div>\n                        <input onChange={() => {\n                            if (textInput && textInput.current) textInput.current.focus();\n                            setRepeat(e => !e)\n                        }} checked={repeat} type=\"checkbox\" className=\"form-check-input\" id=\"repeatMode\"/>\n                        <label className=\"form-check-label\" htmlFor=\"repeatMode\">Répeter en cas d'erreur</label>\n                    </div>\n                    <div>\n                        <input onChange={() => {\n                            if (textInput && textInput.current) textInput.current.focus();\n                            setMinimal(e => !e)\n                        }} checked={minimal} type=\"checkbox\" className=\"form-check-input\" id=\"minVoc\"/>\n                        <label className=\"form-check-label\" htmlFor=\"minVoc\">Juste le vocabulaire essentiel</label>\n                    </div>\n                </div>\n            </div>\n            <div style={{position: 'relative'}}>\n                <div className=\"help-message\">Aide à la saisie, cliquez sur une lettre pour l'ajouter</div>\n                <div className=\"helper\">\n                    <li><kbd onClick={() => addLetter('ñ')}>ñ</kbd></li>\n                    <li><kbd onClick={() => addLetter('á')}>á</kbd></li>\n                    <li><kbd onClick={() => addLetter('ó')}>ó</kbd></li>\n                    <li><kbd onClick={() => addLetter('í')}>í</kbd></li>\n                    <li><kbd onClick={() => addLetter('ú')}>ú</kbd></li>\n                </div>\n            </div>\n            {vocabulary.length === 0 &&\n            <div className=\"center\">Pas de résultats</div>\n            }\n            {vocabulary.length > 0 &&\n            <>\n                <div className=\"statistics\">\n                    <div>{vocabulary[current].es.length > 1 && vocabulary[current].es.length + \" possibilités\"}</div>\n                    {repeat && (show || error) && <div>\n                        {repeatCount}/5\n                    </div>\n                    }\n                    <div>\n                        {resultForWord ? getRatio(resultForWord.attemps, resultForWord.success) + ' % de réussite' : 'nouveau'} | {vocabulary[current].module}\n                    </div>\n                </div>\n                <div className=\"currentWord alert alert-info\">{vocabulary[current].fr}</div>\n\n\n                <div className=\"input-group mb-3\" style={{width: '100%'}}>\n                <textarea ref={textInput} className={inputClass} type=\"text\" value={input}\n                          onKeyPress={handleTextarea} onChange={(e) => setInput(e.target.value)}>{input}</textarea>\n                    <div className=\"input-group-append\">\n                        <button onClick={checkWord} className=\"btn btn-primary\">Valider</button>\n                    </div>\n                </div>\n                {show &&\n                <p className=\"answer\">{vocabulary[current].es.join(', ')}</p>\n                }\n\n                <div className=\"solutions\">\n                    {!show &&\n                    <button key=\"show\" className=\"btn btn-danger\" onClick={() => {\n                        if (textInput) textInput.current.focus()\n                        setShow(true)\n                    }\n                    }>🕶 Voir la réponse</button>\n                    }\n                    {show &&\n                    <button key=\"next\" className=\"btn btn-danger\" onClick={nextWord}>Next</button>\n                    }\n                    <button key=\"read\" className=\"btn btn-warning\" onClick={readWord}>Écouter la\n                        réponse 🔊\n                    </button>\n                </div>\n            </>\n            }\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}